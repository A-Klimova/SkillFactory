board=list(range(1, 10)) #список с числами от 0 до 9(глобальная переменная со списком)
#выигрышные комбинации, переменная список
wins_coord = [(1,2,3),(4,5,6),(7,8,9),(1,4,7),(2,5,8),(3,6,9),(1,5,9),(3,5,7)] #кортеж(неизменяемые данные)константа
#Функция 1 нарисовать доску
def input_board():
    print('______________') #схематичное игровое поле
    for i in range(3): #заполнение цифрами от 0 до 2
        print(' | ', board[0+i*3], ' | ', board[1+i*3], ' | ', board[2+i*3], ' | ')#формула для того, чтобы взять значение из списка
    print('______________')
#функция принимающая ввод данных

def take_input(player):
    while True: #открываем цикл
        value=input('Куда поставить: ' + player +'?')#оператор ввода
        if not(value in '123456789' ): #проверка расстановки значений
            print(' Ошибочный ввод. Повторите! ')#тогда
            continue   #возвращает выполнение цикла в начало, если ошибка ввода


        value = int(value)
        if str(board [ value - 1]) in 'XO': #предупреждение, если там уже стоит либо Х либо О, то эта клетка уже занята, возвращение цикла для нового ввода
            print('Эта клетка уже занята!')
            continue
        board[value-1]=player #если все ок, будем записывать данные Х или О
        break #выход из цикла, иначе будет бесконечно вводить значения

#проверка на выигрыш
def test_combination():
    for any_variable in wins_coord: #цикл любая переменная(any_variable)
        if (board[any_variable[0]-1]) == (board[any_variable[1]-1]) == (board[any_variable[2]-1]) : #обращение к каждому числу в кортеже по его индексу, отнимаем 1 чтобы было смещение назад(по индексу), если все знаки будут равны, тогда вернем выигрышную позицию
            return board [ any_variable[ 1 ] -1 ]
    else:
        return False # в противном случае, будет дальше перебор комбинаций
#функция, чтобы все работало
def main():
    counter=0 #переменная, отвечающая за ход
    while True: #цикл, пока истина рисуем доску(input_board)
        input_board()
        if counter%2==0: #если число четное ставим Х
            take_input('X')
        else: #каждый не четный ход О
            take_input('O')
        if counter>3: #условие, если на поле уже сделано больше чем 3 хода, тогда проверяем выигрышную комбинацию(test_combination)
            winner=test_combination()
            if winner: #если получили истину, тогда мы рисуем доску и выводим на экран значение победа
                input_board()
                print(winner, "Победа!")
                break #если есть победитель прерывыем цикл
        counter+=1 #если условие не достигло 3, просто обходим и увеличиваем на 1
        if counter>8: # условие проверка завершения игры
            input_board()
            print("Ничья!")
            break

main() #вызов функции

input_board()
